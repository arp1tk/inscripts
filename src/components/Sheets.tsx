

import React from "react"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import {
    Breadcrumb,
    BreadcrumbItem,
    BreadcrumbLink,
    BreadcrumbList,
    BreadcrumbPage,
    BreadcrumbSeparator,
} from "@/components/ui/breadcrumb"
import { Input } from "@/components/ui/input"
import { Badge } from "@/components/ui/badge"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import {
    Search,

    Plus,
    MoreHorizontal,

} from "lucide-react"

export default function Component() {
    const [activeTab, setActiveTab] = useState("All Orders")

    const [tasks, setTasks] = useState([
        {
            id: 1,
            jobRequest: "Launch social media campaign for pro...",
            submitted: "15-11-2024",
            status: "In-process",
            submitter: "Aisha Patel",
            url: "www.aishapatel...",
            assigned: "Sophie Choudhury",
            priority: "Medium",
            dueDate: "20-11-2024",
            estValue: "6,200,000",
            actions: "",
        },
        {
            id: 2,
            jobRequest: "Update press kit for company redesign",
            submitted: "28-10-2024",
            status: "Need to start",
            submitter: "Irfan Khan",
            url: "www.irfankhap...",
            assigned: "Tejas Pandey",
            priority: "High",
            dueDate: "30-10-2024",
            estValue: "3,500,000",
            actions: "",
        },
        {
            id: 3,
            jobRequest: "Finalize user testing feedback for app...",
            submitted: "05-12-2024",
            status: "In-process",
            submitter: "Mark Johnson",
            url: "www.markjohns...",
            assigned: "Rachel Lee",
            priority: "Medium",
            dueDate: "10-12-2024",
            estValue: "4,750,000",
            actions: "",
        },
        {
            id: 4,
            jobRequest: "Design new features for the website",
            submitted: "10-01-2025",
            status: "Complete",
            submitter: "Emily Green",
            url: "www.emilygreen...",
            assigned: "Tom Wright",
            priority: "Low",
            dueDate: "15-01-2025",
            estValue: "5,900,000",
            actions: "",
        },
        {
            id: 5,
            jobRequest: "Prepare financial report for Q4",
            submitted: "25-01-2025",
            status: "Blocked",
            submitter: "Jessica Brown",
            url: "www.jessicabro...",
            assigned: "Kevin Smith",
            priority: "Low",
            dueDate: "30-01-2025",
            estValue: "2,800,000",
            actions: "",
        },
    ])

    const handleCellEdit = (rowIndex: number, field: string, value: string) => {
        const updatedTasks = [...tasks]
        updatedTasks[rowIndex] = { ...updatedTasks[rowIndex], [field]: value }
        setTasks(updatedTasks)
    }

    const handleButtonClick = (buttonName: string) => {
        alert(`${buttonName} button clicked!`)
    }

    const getStatusColor = (status: string) => {
        switch (status) {
            case "In-process":
                return "bg-[#FFF3D6] text-[#85640B]"
            case "Need to start":
                return "bg-[#E2E8F0] text-[#475569]"
            case "Complete":
                return "bg-[#D3F2E3] text-[#0A6E3D]"
            case "Blocked":
                return "bg-[#FFE1DE] text-[#C22219]"
            default:
                return "bg-[#afafaf] text-white"
        }
    }

    const getPriorityColor = (priority: string) => {
        switch (priority) {
            case "High":
                return "text-[#ef4d44] font-medium"
            case "Medium":
                return "text-[#c29210] font-medium"
            case "Low":
                return "text-[#1a8cff] font-medium"
            default:
                return "text-[#757575] font-medium"
        }
    }

    const EditableCell = ({
        value,
        onSave,
        className = "",
        type = "text",
    }: {
        value: string
        onSave: (value: string) => void
        className?: string
        type?: string
    }) => {
        const [isEditing, setIsEditing] = useState(false)
        const [editValue, setEditValue] = useState(value)

        const handleSave = () => {
            onSave(editValue)
            setIsEditing(false)
        }

        const handleKeyPress = (e: React.KeyboardEvent) => {
            if (e.key === "Enter") {
                handleSave()
            }
            if (e.key === "Escape") {
                setEditValue(value)
                setIsEditing(false)
            }
        }

        if (isEditing) {
            return (
                <input
                    type={type}
                    value={editValue}
                    onChange={(e) => setEditValue(e.target.value)}
                    onBlur={handleSave}
                    onKeyDown={handleKeyPress}
                    className={`w-full bg-transparent border-none outline-none ${className}`}
                    autoFocus
                />
            )
        }

        return (
            <div
                onClick={() => setIsEditing(true)}
                className={`cursor-text hover:bg-[#f1f5f9] p-1 -m-1 rounded ${className}`}
            >
                {value || ""}
            </div>
        )
    }

    const tabs = ["All Orders", "Pending", "Reviewed", "Arrived"]

    return (
        <div className="bg-[#faf4ee] flex justify-center">
            <div className="font-work w-[1440px] h-[1024px] bg-white">
                {/* Header */}
                <div className="bg-white border-b h-[56px] w-full border-[#e2e2e2] px-4 py-2.5">
                    <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-2 h-[24px]  text-[14px]  text-[#AFAFAF]">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M18.75 4C20.5449 4 22 5.45507 22 7.25V16.75C22 18.5449 20.5449 20 18.75 20H5.25C3.45507 20 2 18.5449 2 16.75V7.25C2 5.45507 3.45507 4 5.25 4H18.75ZM5.25 5.5C4.2835 5.5 3.5 6.2835 3.5 7.25V16.75C3.5 17.7165 4.2835 18.5 5.25 18.5H14.5V5.5H5.25Z" fill="#618666" />
                            </svg>

                            <Breadcrumb>
                                <BreadcrumbList>
                                    <BreadcrumbItem>
                                        <BreadcrumbLink href="/">Workspace</BreadcrumbLink>
                                    </BreadcrumbItem>
                                    <BreadcrumbSeparator />
                                    <BreadcrumbItem>
                                        <BreadcrumbLink href="/">Folder 2</BreadcrumbLink>
                                    </BreadcrumbItem>
                                    <BreadcrumbSeparator />
                                    <BreadcrumbItem>
                                        <BreadcrumbPage className="font-semibold text-black">Spreadsheet 3</BreadcrumbPage>
                                    </BreadcrumbItem>
                                </BreadcrumbList>
                            </Breadcrumb>
                            <MoreHorizontal className="w-4 h-4" />
                        </div>
                        <div className="flex items-center space-x-4">
                            <div className="relative w-[165px] h-[40px]">
                                <Search className="w-4 h-4 absolute left-3 top-1/2 transform -translate-y-1/2 text-[#757575]" />
                                <Input
                                    placeholder="Search within sheet"
                                    className="w-full h-full pl-10 pr-3 placeholder:text-[12px] bg-[#f6f6f6] border border-[#e2e2e2] text-sm rounded-[6px] placeholder:text-[#757575] focus:outline-none"
                                />
                            </div>

                            <div className="relative">
                                <svg width="18" height="20" viewBox="0 0 18 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M8.99999 -0.00377655C13.0499 -0.00377655 16.3567 3.19097 16.4958 7.24528L16.5 7.49622V11.5932L17.88 14.7492C17.949 14.9071 17.9847 15.0776 17.9847 15.25C17.9847 15.9404 17.425 16.5 16.7347 16.5L12 16.5015C12 18.1583 10.6568 19.5015 8.99999 19.5015C7.40231 19.5015 6.09633 18.2526 6.00508 16.6778L5.99954 16.4992L1.27485 16.5C1.10351 16.5 0.934005 16.4648 0.776852 16.3965C0.14365 16.1215 -0.146699 15.3852 0.12834 14.752L1.49999 11.5941V7.49612C1.50059 3.34132 4.85208 -0.00377655 8.99999 -0.00377655ZM10.4995 16.4992L7.49999 16.5015C7.49999 17.3299 8.17156 18.0015 8.99999 18.0015C9.77969 18.0015 10.4204 17.4066 10.4931 16.646L10.4995 16.4992ZM8.99999 1.49622C5.67983 1.49622 3.00047 4.17048 2.99999 7.49622V11.9059L1.65601 15H16.3525L15 11.9068L15.0001 7.50908L14.9964 7.28388C14.8853 4.0504 12.2416 1.49622 8.99999 1.49622Z" fill="#121212" />
                                </svg>

                                <div className="absolute -top-1 -right-1 w-3 h-3 bg-green-600 rounded-full flex items-center justify-center">
                                    <span className="text-[10px] text-white font-bold">2</span>
                                </div>
                            </div>
                            <div className="flex items-center space-x-2">
                                <Avatar className="w-8 h-8">
                                    <AvatarImage src="/john.png" />
                                    <AvatarFallback className="bg-[#618666] text-white text-sm">JD</AvatarFallback>
                                </Avatar>
                                <div className="text-sm">
                                    <div className="font-medium text-[#121212] leading-tight">John Doe</div>
                                    <div className="text-[#757575] leading-tight">john.doe...</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                {/* Toolbar */}
                <div className="bg-white border-b border-[#e2e2e2] px-4 py-2.5">
                    <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-6 text-[#121212] text-[14px]">
                            <div className="flex items-center space-x-2  ">
                                <span>Tool bar</span>
                                <svg width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M3.91665 0.31766C4.07259 0.161172 4.32585 0.160721 4.48234 0.316653L8.86993 4.68864C9.0425 4.86059 9.0425 5.14004 8.86993 5.312L4.48234 9.68398C4.32585 9.83992 4.07259 9.83946 3.91665 9.68298C3.76072 9.52649 3.76117 9.27322 3.91766 9.11729L8.04933 5.00032L3.91766 0.883345C3.76117 0.727413 3.76072 0.474148 3.91665 0.31766ZM0.716654 0.31766C0.872585 0.161172 1.12585 0.160721 1.28234 0.316653L5.66993 4.68864C5.8425 4.86059 5.8425 5.14004 5.66993 5.312L1.28234 9.68398C1.12585 9.83992 0.872585 9.83946 0.716654 9.68298C0.560723 9.52649 0.561174 9.27322 0.717662 9.11729L4.84933 5.00032L0.717662 0.883345C0.561174 0.727413 0.560723 0.474148 0.716654 0.31766Z" fill="#121212" />
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M1.21175 0.387489C1.09439 0.270541 0.904439 0.270879 0.78749 0.388245C0.670542 0.50561 0.67088 0.69556 0.788246 0.812508L4.91991 4.92948C4.93874 4.94825 4.94933 4.97373 4.94933 5.00032C4.94933 5.0269 4.93874 5.05239 4.91991 5.07115L0.788246 9.18813C0.67088 9.30508 0.670542 9.49502 0.787491 9.61239C0.904439 9.72976 1.09439 9.73009 1.21175 9.61315L5.59934 5.24116C5.73269 5.10829 5.73269 4.89235 5.59934 4.75947L1.21175 0.387489ZM0.645817 0.247075C0.840732 0.0514657 1.15731 0.0509019 1.35292 0.245816L5.74051 4.6178C5.9523 4.82884 5.9523 5.1718 5.74051 5.38283L1.35292 9.75482C1.15731 9.94973 0.840731 9.94917 0.645817 9.75356C0.450904 9.55795 0.451467 9.24137 0.647077 9.04645L4.70765 5.00032L0.647077 0.954181C0.451467 0.759267 0.450903 0.442685 0.645817 0.247075ZM4.41175 0.387489C4.29439 0.270541 4.10444 0.270879 3.98749 0.388245C3.87054 0.50561 3.87088 0.69556 3.98825 0.812508L8.11991 4.92948C8.13874 4.94825 8.14933 4.97373 8.14933 5.00032C8.14933 5.0269 8.13874 5.05239 8.11991 5.07115L3.98825 9.18813C3.87088 9.30508 3.87054 9.49502 3.98749 9.61239C4.10444 9.72976 4.29439 9.73009 4.41175 9.61315L8.79934 5.24116C8.93269 5.10829 8.93269 4.89235 8.79934 4.75947L4.41175 0.387489ZM3.84582 0.247075C4.04073 0.0514657 4.35731 0.0509019 4.55292 0.245816L8.94051 4.6178C9.1523 4.82884 9.1523 5.1718 8.94051 5.38283L4.55292 9.75482C4.35731 9.94973 4.04073 9.94917 3.84582 9.75356C3.6509 9.55795 3.65147 9.24137 3.84708 9.04645L7.90765 5.00032L3.84708 0.954181C3.65147 0.759267 3.6509 0.442685 3.84582 0.247075Z" fill="#121212" />
                                </svg>

                            </div>
                            <div className="flex items-center space-x-1">
                                <Button
                                    variant="ghost"
                                    size="sm"
                                    className=" hover:bg-[#f6f6f6] h-8 px-3 "
                                    onClick={() => handleButtonClick("Hide fields")}
                                >
                                    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M1.84972 1.84972C1.62783 2.07161 1.60766 2.41883 1.7892 2.66351L1.84972 2.73361L5.21186 6.09575C3.6102 7.2203 2.41314 8.89993 1.91573 10.887C1.83191 11.2218 2.03541 11.5612 2.37025 11.645C2.7051 11.7289 3.0445 11.5254 3.12832 11.1905C3.56955 9.42789 4.65926 7.94956 6.1118 6.99543L7.61982 8.50354C7.03023 9.10482 6.66666 9.92854 6.66666 10.8372C6.66666 12.6781 8.15905 14.1705 9.99999 14.1705C10.9086 14.1705 11.7324 13.807 12.3336 13.2174L17.2664 18.1503C17.5105 18.3944 17.9062 18.3944 18.1503 18.1503C18.3722 17.9284 18.3923 17.5812 18.2108 17.3365L18.1503 17.2664L13.0557 12.1712L13.0567 12.17L12.0566 11.1718L9.66497 8.78065L9.66666 8.78L7.26564 6.38152L7.26666 6.38L6.32226 5.4379L2.7336 1.84972C2.48953 1.60564 2.0938 1.60564 1.84972 1.84972ZM8.50339 9.38789L11.4493 12.3338C11.0743 12.697 10.5633 12.9205 9.99999 12.9205C8.8494 12.9205 7.91666 11.9878 7.91666 10.8372C7.91666 10.2739 8.14019 9.76287 8.50339 9.38789ZM9.99999 4.58333C9.16644 4.58333 8.35761 4.70672 7.59257 4.9375L8.62338 5.96766C9.06988 5.87943 9.53033 5.83333 9.99999 5.83333C13.2692 5.83333 16.0916 8.06688 16.8726 11.1943C16.9562 11.5292 17.2955 11.7329 17.6304 11.6492C17.9653 11.5656 18.169 11.2263 18.0854 10.8914C17.1661 7.2106 13.8463 4.58333 9.99999 4.58333ZM10.1622 7.50773L13.33 10.675C13.2452 8.9609 11.8727 7.5897 10.1622 7.50773Z" fill="#121212" />
                                    </svg>

                                    Hide fields
                                </Button>
                                 <Button
                                    variant="ghost"
                                    size="sm"
                                    className=" hover:bg-[#f6f6f6] h-8 px-3 "
                                    onClick={() => handleButtonClick("Sort")}
                                >
                                    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M14.3757 3.33334L14.2909 3.33904C13.9858 3.38043 13.7507 3.64192 13.7507 3.95834L13.75 14.535L11.0668 11.8537L10.9966 11.7932C10.7519 11.6117 10.4047 11.6321 10.1829 11.854C9.9389 12.0982 9.93906 12.4939 10.1832 12.7379L13.9364 16.4879L14.0065 16.5484C14.2513 16.7298 14.5985 16.7095 14.8203 16.4875L18.5671 12.7375L18.6276 12.6674C18.8091 12.4227 18.7887 12.0755 18.5668 11.8537L18.4966 11.7932C18.2519 11.6117 17.9047 11.6321 17.6829 11.854L15 14.5383L15.0007 3.95834L14.995 3.87353C14.9536 3.56846 14.6921 3.33334 14.3757 3.33334ZM5.17868 3.51641L1.43304 7.26229L1.37253 7.33239C1.19099 7.57707 1.21118 7.92429 1.43307 8.14617L1.50317 8.20668C1.74786 8.38822 2.09507 8.36804 2.31696 8.14614L4.9975 5.46426L4.99805 16.0458L5.00376 16.1306C5.04514 16.4357 5.30664 16.6708 5.62305 16.6708L5.70786 16.6651C6.01292 16.6237 6.24805 16.3622 6.24805 16.0458L6.2475 5.46593L8.93322 8.14664L9.00338 8.20708C9.24826 8.38835 9.59545 8.36781 9.8171 8.14567C10.0609 7.90133 10.0605 7.5056 9.81614 7.26179L6.06209 3.51591L5.99198 3.45551C5.7473 3.27434 5.40039 3.29468 5.17868 3.51641Z" fill="#121212" />
                                    </svg>

                                    Sort
                                </Button>
                                <Button
                                    variant="ghost"
                                    size="sm"
                                    className=" hover:bg-[#f6f6f6] h-8 px-3 "
                                    onClick={() => handleButtonClick("Filter")}
                                >
                                    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M11.25 13.3333C11.5952 13.3333 11.875 13.6132 11.875 13.9583C11.875 14.3035 11.5952 14.5833 11.25 14.5833H8.75C8.40482 14.5833 8.125 14.3035 8.125 13.9583C8.125 13.6132 8.40482 13.3333 8.75 13.3333H11.25ZM13.75 9.16667C14.0952 9.16667 14.375 9.44649 14.375 9.79167C14.375 10.1368 14.0952 10.4167 13.75 10.4167H6.25C5.90482 10.4167 5.625 10.1368 5.625 9.79167C5.625 9.44649 5.90482 9.16667 6.25 9.16667H13.75ZM16.25 5C16.5952 5 16.875 5.27982 16.875 5.625C16.875 5.97018 16.5952 6.25 16.25 6.25H3.75C3.40482 6.25 3.125 5.97018 3.125 5.625C3.125 5.27982 3.40482 5 3.75 5H16.25Z" fill="#121212" />
                                    </svg>

                                    Filter
                                </Button>
                                <Button
                                    variant="ghost"
                                    size="sm"
                                    className=" hover:bg-[#f6f6f6] h-8 px-3"
                                    onClick={() => handleButtonClick("Cell view")}
                                >
                                    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M11.0164 5.65096C10.7945 5.42907 10.7743 5.08185 10.9559 4.83717L11.0164 4.76708L12.9893 2.79199C13.094 2.61834 13.3024 2.5 13.5424 2.5C13.7525 2.5 13.9384 2.59072 14.0517 2.72982L14.0956 2.79227L16.0683 4.76708L16.1288 4.83717C16.2902 5.05466 16.2922 5.35318 16.1348 5.57267L16.0683 5.65096L15.9982 5.71147C15.7807 5.87285 15.4822 5.87484 15.2627 5.71745L15.1844 5.65096L14.1667 4.63333V7.78653L14.161 7.86073C14.1195 8.12766 13.858 8.33333 13.5416 8.33333C13.2252 8.33333 12.9637 8.12754 12.9224 7.8606L12.9167 7.78639V4.63333L11.9003 5.65096L11.8302 5.71147C11.5855 5.89302 11.2383 5.87285 11.0164 5.65096ZM11.0188 14.349C11.2407 14.1272 11.5879 14.107 11.8326 14.2885L11.9027 14.349L12.9191 15.3667V12.2136C12.9191 11.9116 13.1989 11.6667 13.544 11.6667C13.8604 11.6667 14.122 11.8723 14.1634 12.1393L14.1691 12.2135V15.3667L15.1869 14.349C15.4088 14.1272 15.756 14.107 16.0007 14.2885L16.0708 14.349C16.2926 14.5709 16.3128 14.9181 16.1313 15.1628L16.0708 15.2329L14.0981 17.2077C13.9934 17.3815 13.785 17.5 13.5449 17.5C13.3049 17.5 13.0964 17.3817 12.9917 17.208L11.0188 15.2329C10.7748 14.9888 10.7748 14.5931 11.0188 14.349ZM5.20834 3.32682C4.17281 3.32682 3.33334 4.16629 3.33334 5.20182V14.7852C3.33334 15.8207 4.17281 16.6602 5.20834 16.6602H8.54168C8.88686 16.6602 9.16668 16.3803 9.16668 16.0352C9.16668 15.69 8.88686 15.4102 8.54168 15.4102H5.20834C4.86317 15.4102 4.58334 15.1303 4.58334 14.7852V5.20182C4.58334 4.85664 4.86317 4.57682 5.20834 4.57682H8.54168C8.88686 4.57682 9.16668 4.297 9.16668 3.95182C9.16668 3.60664 8.88686 3.32682 8.54168 3.32682H5.20834Z" fill="#121212" />
                                    </svg>


                                    Cell view
                                </Button>
                            </div>
                        </div>
                        <div className="flex items-center gap-[4px]">
                            <Button
                                variant="ghost"
                                size="sm"
                                className="text-[#757575] bg-white hover:bg-[#f6f6f6] w-[90px] h-[36px] pt-2 pr-3 pb-2 pl-2 rounded-[6px] border border-[#EEEEEE] text-sm flex items-center justify-center"
                                onClick={() => handleButtonClick("Import")}
                            >
                                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M15.2082 17.0833C15.5533 17.0832 15.8333 17.363 15.8333 17.7082C15.8333 18.0533 15.5537 18.3332 15.2085 18.3333L4.37518 18.3365C4.03 18.3366 3.75 18.0568 3.75 17.7117C3.75 17.3665 4.02964 17.0866 4.37482 17.0865L15.2082 17.0833ZM9.70686 1.6765L9.79167 1.67079C10.1081 1.67079 10.3696 1.90592 10.411 2.21098L10.4167 2.29579L10.4158 13.7L13.5173 10.5997C13.7393 10.3778 14.0865 10.3577 14.3311 10.5393L14.4012 10.5998C14.6231 10.8217 14.6432 11.1689 14.4617 11.4136L14.4011 11.4837L10.2364 15.6475C10.0146 15.8692 9.66766 15.8895 9.423 15.7082L9.3529 15.6478L5.18336 11.4839C4.93912 11.24 4.93885 10.8443 5.18276 10.6C5.40449 10.378 5.7517 10.3576 5.9965 10.539L6.06664 10.5994L9.16583 13.6941L9.16667 2.29579C9.16667 1.97938 9.40179 1.71788 9.70686 1.6765L9.79167 1.67079L9.70686 1.6765Z" fill="#545454" />
                                </svg>

                                Import
                            </Button>

                            <Button
                                variant="ghost"
                                size="sm"
                                className="text-[#757575] hover:bg-[#f6f6f6] h-[36px] px-3 rounded-[6px] border border-[#EEEEEE] text-sm flex items-center justify-center"
                                onClick={() => handleButtonClick("Export")}
                            >
                                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M15.2082 2.92392C15.5533 2.92402 15.8333 2.64428 15.8333 2.2991C15.8333 1.95392 15.5537 1.67402 15.2085 1.67392L4.37518 1.67078C4.03 1.67068 3.75 1.95043 3.75 2.2956C3.75 2.64078 4.02964 2.92068 4.37482 2.92078L15.2082 2.92392ZM9.70686 18.3308L9.79167 18.3365C10.1081 18.3365 10.3696 18.1013 10.411 17.7963L10.4167 17.7115L10.4158 6.3073L13.5173 9.40757C13.7393 9.62944 14.0865 9.64958 14.3311 9.46801L14.4012 9.40748C14.6231 9.18557 14.6432 8.83835 14.4617 8.59369L14.4011 8.5236L10.2364 4.35975C10.0146 4.13801 9.66766 4.11776 9.423 4.29906L9.3529 4.3595L5.18336 8.52334C4.93912 8.76725 4.93885 9.16298 5.18276 9.40723C5.40449 9.62927 5.7517 9.64968 5.9965 9.4683L6.06664 9.40783L9.16583 6.31313L9.16667 17.7115C9.16667 18.0279 9.40179 18.2894 9.70686 18.3308Z" fill="#545454" />
                                </svg>

                                Export
                            </Button>

                            <Button
                                variant="ghost"
                                size="sm"
                                className="text-[#757575] hover:bg-[#f6f6f6] h-[36px] px-3 rounded-[6px] border border-[#EEEEEE] text-sm flex items-center justify-center"
                                onClick={() => handleButtonClick("Share")}
                            >
                                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M5.62231 3.33333H8.50915C8.85433 3.33333 9.13415 3.61316 9.13415 3.95833C9.13415 4.27475 8.89902 4.53624 8.59396 4.57763L8.50915 4.58333H5.62231C4.62993 4.58333 3.81761 5.3543 3.75164 6.32996L3.74731 6.45833V14.375C3.74731 15.3674 4.51828 16.1797 5.49394 16.2457L5.62231 16.25H13.5396C14.532 16.25 15.3443 15.479 15.4103 14.5034L15.4146 14.375V13.9602C15.4146 13.615 15.6944 13.3352 16.0396 13.3352C16.356 13.3352 16.6175 13.5703 16.6589 13.8754L16.6646 13.9602V14.375C16.6646 16.0452 15.3543 17.4094 13.7056 17.4957L13.5396 17.5H5.62231C3.9521 17.5 2.58792 16.1897 2.50165 14.541L2.49731 14.375V6.45833C2.49731 4.78812 3.80762 3.42394 5.45635 3.33767L5.62231 3.33333H8.50915H5.62231ZM12.084 5.43321V3.125C12.084 2.60503 12.673 2.32496 13.0731 2.6165L13.1416 2.67395L18.1371 7.46562C18.3703 7.68924 18.3915 8.04843 18.2008 8.29673L18.1372 8.36765L13.1417 13.1609C12.7665 13.5209 12.1565 13.2897 12.0899 12.7991L12.084 12.7099V10.4388L11.7977 10.4639C9.79799 10.6725 7.88129 11.5732 6.0356 13.1811C5.60301 13.558 4.93374 13.2017 5.00488 12.6324C5.55888 8.19942 7.8771 5.75608 11.8345 5.44959L12.084 5.43321V3.125V5.43321ZM13.334 4.59054V6.04167C13.334 6.38685 13.0542 6.66667 12.709 6.66667C9.48114 6.66667 7.48062 8.06344 6.61625 10.9643L6.55037 11.1965L6.84386 10.9991C8.7076 9.781 10.6654 9.16667 12.709 9.16667C13.0254 9.16667 13.2869 9.4018 13.3283 9.70686L13.334 9.79167V11.244L16.8017 7.91674L13.334 4.59054Z" fill="#545454" />
                                </svg>

                                Share
                            </Button>

                            <Button
                                className="bg-[#618666] hover:bg-[#4B6A4F] text-white h-[36px] px-3 rounded-[6px] text-[14px] flex items-center justify-center"
                                onClick={() => handleButtonClick("New Action")}
                            >
                                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M10.0001 2.5C10.3452 2.5 10.6251 2.77982 10.6251 3.125V7.91667H12.7046C13.9702 7.91667 14.9963 8.94268 14.9963 10.2083V15.368L16.4334 13.9328C16.6777 13.6888 17.0734 13.6891 17.3173 13.9334C17.5612 14.1776 17.5609 14.5733 17.3167 14.8172L14.8129 17.3177C14.5688 17.5615 14.1733 17.5613 13.9293 17.3174L11.4289 14.8169C11.1848 14.5729 11.1848 14.1771 11.4289 13.9331C11.673 13.689 12.0687 13.689 12.3128 13.9331L13.7463 15.3665V10.2083C13.7463 9.63304 13.2799 9.16667 12.7046 9.16667H7.29165C6.71635 9.16667 6.24998 9.63304 6.24998 10.2083V15.3665L7.68346 13.9331C7.92754 13.689 8.32327 13.689 8.56734 13.9331C8.81142 14.1771 8.81142 14.5729 8.56734 14.8169L6.06692 17.3174C5.82285 17.5614 5.42712 17.5614 5.18304 17.3174L2.68257 14.8169C2.43849 14.5729 2.43849 14.1771 2.68257 13.9331C2.92664 13.689 3.32237 13.689 3.56645 13.9331L4.99998 15.3666V10.2083C4.99998 8.94268 6.026 7.91667 7.29165 7.91667H9.37506V3.125C9.37506 2.77982 9.65488 2.5 10.0001 2.5Z" fill="white" />
                                </svg>

                                New Action
                            </Button>
                        </div>

                    </div>
                </div>

                {/* Tab Section */}
                <div className="bg-white  border-b border-[#e2e2e2]">
                    <div className="flex items-center space-x-2">
                        <div className="flex items-center w-[642px] h-[32px] gap-2 p-2 ml-12 bg-[#E2E2E2] ">
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M6.16667 4.66666C6.44281 4.66666 6.66667 4.89052 6.66667 5.16666C6.66667 5.4177 6.48166 5.62553 6.24055 5.66124L6.16667 5.66666H4.66667C3.378 5.66666 2.33333 6.71133 2.33333 8C2.33333 9.24264 3.30471 10.2584 4.52956 10.3294L4.66667 10.3333H6.16667C6.44281 10.3333 6.66667 10.5572 6.66667 10.8333C6.66667 11.0844 6.48166 11.2922 6.24055 11.3279L6.16667 11.3333H4.66667C2.82572 11.3333 1.33333 9.84095 1.33333 8C1.33333 6.21483 2.73664 4.75743 4.5003 4.67074L4.66667 4.66666H6.16667ZM11.3333 4.66666C13.1743 4.66666 14.6667 6.15905 14.6667 8C14.6667 9.78516 13.2634 11.2426 11.4997 11.3293L11.3333 11.3333H9.83333C9.55719 11.3333 9.33333 11.1095 9.33333 10.8333C9.33333 10.5823 9.51834 10.3745 9.75945 10.3388L9.83333 10.3333H11.3333C12.622 10.3333 13.6667 9.28866 13.6667 8C13.6667 6.75736 12.6953 5.74159 11.4704 5.67062L11.3333 5.66666H9.83333C9.55719 5.66666 9.33333 5.44281 9.33333 5.16666C9.33333 4.91563 9.51834 4.7078 9.75945 4.67209L9.83333 4.66666H11.3333ZM4.66667 7.5H11.3333C11.6095 7.5 11.8333 7.72385 11.8333 8C11.8333 8.25313 11.6452 8.46232 11.4012 8.49543L11.3333 8.5H4.66667C4.39052 8.5 4.16667 8.27614 4.16667 8C4.16667 7.74687 4.35477 7.53767 4.59882 7.50456L4.66667 7.5H11.3333H4.66667Z" fill="#1A8CFF" />
                            </svg>

                            <span className="text-[#545454] text-sm">Q3 Financial Overview</span>
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M10.8337 3.45341C10.6663 3.67298 10.7085 3.98673 10.9281 4.15419C12.1203 5.06343 12.8333 6.47214 12.8333 8C12.8333 10.4907 10.9494 12.5413 8.52888 12.8047L8.97978 12.3536C9.17505 12.1583 9.17505 11.8417 8.97978 11.6464C8.80227 11.4689 8.5245 11.4528 8.32876 11.598L8.27268 11.6464L6.93934 12.9798C6.76183 13.1573 6.7457 13.4351 6.89093 13.6308L6.93934 13.6869L8.27268 15.0202C8.46794 15.2155 8.78452 15.2155 8.97978 15.0202C9.1573 14.8427 9.17343 14.5649 9.0282 14.3692L8.97978 14.3131L8.47963 13.8139C11.4769 13.57 13.8333 11.0602 13.8333 8C13.8333 6.15685 12.9721 4.45548 11.5345 3.35905C11.3149 3.19159 11.0012 3.23384 10.8337 3.45341ZM7.02022 0.979782C6.82496 1.17504 6.82496 1.49163 7.02022 1.68689L7.51972 2.18616C4.52273 2.4304 2.16667 4.94006 2.16667 8C2.16667 9.76297 2.95418 11.3983 4.28721 12.4994C4.50011 12.6753 4.81527 12.6452 4.99113 12.4323C5.16699 12.2194 5.13697 11.9043 4.92407 11.7284C3.81863 10.8153 3.16667 9.46147 3.16667 8C3.16667 5.50958 5.05022 3.45908 7.47047 3.19535L7.02022 3.64645C6.82496 3.84171 6.82496 4.15829 7.02022 4.35356C7.21549 4.54882 7.53207 4.54882 7.72733 4.35356L9.06066 3.02022C9.25593 2.82496 9.25593 2.50838 9.06066 2.31312L7.72733 0.979782C7.53207 0.78452 7.21549 0.78452 7.02022 0.979782Z" fill="#FA6736" />
                            </svg>

                        </div>

                        <div className="flex ml-34">
                            <div
                                className="flex items-center gap-1 bg-[#D2E0D4] text-[#0a6e3d] py-1.5 px-2 w-[130px] h-[32px] text-[14px] font-medium cursor-pointer"
                                onClick={() => handleButtonClick("ABC")}
                            >
                                <svg width="17" height="16" viewBox="0 0 17 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M8.50001 2C8.77616 2 9.00001 2.22386 9.00001 2.5V6.33333H10.6636C11.6762 6.33333 12.497 7.15414 12.497 8.16667V12.2944L13.6467 11.1462C13.8421 10.9511 14.1587 10.9513 14.3538 11.1467C14.5489 11.3421 14.5487 11.6587 14.3533 11.8538L12.3503 13.8541C12.155 14.0492 11.8386 14.0491 11.6434 13.8539L9.64308 11.8536C9.44782 11.6583 9.44782 11.3417 9.64308 11.1464C9.83834 10.9512 10.1549 10.9512 10.3502 11.1464L11.497 12.2932V8.16667C11.497 7.70643 11.1239 7.33333 10.6636 7.33333H6.33328C5.87304 7.33333 5.49995 7.70643 5.49995 8.16667V12.2932L6.64673 11.1464C6.84199 10.9512 7.15858 10.9512 7.35384 11.1464C7.5491 11.3417 7.5491 11.6583 7.35384 11.8536L5.3535 13.8539C5.15824 14.0492 4.84166 14.0492 4.6464 13.8539L2.64602 11.8536C2.45076 11.6583 2.45076 11.3417 2.64602 11.1465C2.84128 10.9512 3.15786 10.9512 3.35312 11.1464L4.49995 12.2932V8.16667C4.49995 7.15414 5.32076 6.33333 6.33328 6.33333H8.00001V2.5C8.00001 2.22386 8.22387 2 8.50001 2Z" fill="#A3ACA3" />
                                </svg>

                                ABC
                            </div>

                            <div
                                className="flex items-center gap-1 bg-[#DCCFFC] text-[#463E59] px-2 w-[251px] h-[32px] py-1.5 text-sm font-medium cursor-pointer"
                                onClick={() => handleButtonClick("Answer a question")}
                            >
                                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M8.00001 2C8.27616 2 8.50001 2.22386 8.50001 2.5V6.33333H10.1636C11.1762 6.33333 11.997 7.15414 11.997 8.16667V12.2944L13.1467 11.1462C13.3421 10.9511 13.6587 10.9513 13.8538 11.1467C14.0489 11.3421 14.0487 11.6587 13.8533 11.8538L11.8503 13.8541C11.655 14.0492 11.3386 14.0491 11.1434 13.8539L9.14308 11.8536C8.94782 11.6583 8.94782 11.3417 9.14308 11.1464C9.33834 10.9512 9.65492 10.9512 9.85018 11.1464L10.997 12.2932V8.16667C10.997 7.70643 10.6239 7.33333 10.1636 7.33333H5.83328C5.37304 7.33333 4.99995 7.70643 4.99995 8.16667V12.2932L6.14673 11.1464C6.34199 10.9512 6.65858 10.9512 6.85384 11.1464C7.0491 11.3417 7.0491 11.6583 6.85384 11.8536L4.8535 13.8539C4.65824 14.0492 4.34166 14.0492 4.1464 13.8539L2.14602 11.8536C1.95076 11.6583 1.95076 11.3417 2.14602 11.1465C2.34128 10.9512 2.65786 10.9512 2.85312 11.1464L3.99995 12.2932V8.16667C3.99995 7.15414 4.82076 6.33333 5.83328 6.33333H7.50001V2.5C7.50001 2.22386 7.72387 2 8.00001 2Z" fill="white" />
                                </svg>

                                Answer a question
                            </div>

                            <div
                                className="flex items-center gap-1 bg-[#FAC2AF] text-[#695149] px-2 w-[128px] py-1.5  text-sm font-medium cursor-pointer h-[32px]"
                                onClick={() => handleButtonClick("Extract")}
                            >
                                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M7.99995 2C8.2761 2 8.49995 2.22386 8.49995 2.5V6.33333H10.1636C11.1761 6.33333 11.9969 7.15414 11.9969 8.16667V12.2944L13.1466 11.1462C13.342 10.9511 13.6586 10.9513 13.8537 11.1467C14.0489 11.3421 14.0487 11.6587 13.8533 11.8538L11.8502 13.8541C11.6549 14.0492 11.3385 14.0491 11.1434 13.8539L9.14302 11.8536C8.94775 11.6583 8.94775 11.3417 9.14302 11.1464C9.33828 10.9512 9.65486 10.9512 9.85012 11.1464L10.9969 12.2932V8.16667C10.9969 7.70643 10.6238 7.33333 10.1636 7.33333H5.83322C5.37298 7.33333 4.99989 7.70643 4.99989 8.16667V12.2932L6.14667 11.1464C6.34193 10.9512 6.65852 10.9512 6.85378 11.1464C7.04904 11.3417 7.04904 11.6583 6.85378 11.8536L4.85344 13.8539C4.65818 14.0492 4.3416 14.0492 4.14634 13.8539L2.14596 11.8536C1.9507 11.6583 1.95069 11.3417 2.14595 11.1465C2.34122 10.9512 2.6578 10.9512 2.85306 11.1464L3.99989 12.2932V8.16667C3.99989 7.15414 4.8207 6.33333 5.83322 6.33333H7.49995V2.5C7.49995 2.22386 7.72381 2 7.99995 2Z" fill="white" />
                                </svg>

                                Extract
                            </div>
                        </div>

                        <div className="flex items-center justify-center">     <Button
                            variant="ghost"
                            size="sm"
                            className="text-[#757575] h-7 w-7 p-0"
                            onClick={() => handleButtonClick("Add Tab")}
                        >
                            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M9.79153 2.5C10.1079 2.5 10.3695 2.73501 10.4109 3.04007L10.4167 3.12487L10.4177 9.16667H16.4619C16.8071 9.16667 17.0869 9.44649 17.0869 9.79167C17.0869 10.1081 16.8518 10.3696 16.5467 10.411L16.4619 10.4167H10.4177L10.4194 16.4576C10.4194 16.8028 10.1397 17.0827 9.7945 17.0827C9.47808 17.0827 9.21654 16.8477 9.17509 16.5427L9.16937 16.4578L9.16766 10.4167H3.12683C2.78165 10.4167 2.50183 10.1368 2.50183 9.79167C2.50183 9.47525 2.73696 9.21376 3.04202 9.17237L3.12683 9.16667H9.16766L9.16666 3.12513C9.16659 2.77995 9.44635 2.5 9.79153 2.5Z" fill="#04071E" />
                            </svg>

                        </Button></div>

                    </div>
                </div>

                {/* Main Table */}
                <div className="bg-white border border-[#e2e2e2] overflow-hidden">
                    <div className="overflow-x-auto">
                        <table className="w-full border-collapse">
                            <thead className="bg-[#f8fafc]">
                                <tr className="border-b border-[#e2e2e2] h-[32px]">
                                    {[
                                        { title: "#", width: "w-12", svg: null, bg: "bg-[#EEEEEE]" },
                                        {
                                            title: "Job Request",
                                            width: "min-w-[250px]",
                                            bg: "bg-[#EEEEEE]",
                                            svg: (
                                                <svg width="12" height="13" viewBox="0 0 12 13" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M4.83333 1.33333H7.16667C7.44281 1.33333 7.66667 1.55719 7.66667 1.83333V2.99999H4.33333V1.83333C4.33333 1.55719 4.55719 1.33333 4.83333 1.33333ZM3.33333 1.83333V2.99999H2.16667C0.97005 2.99999 0 3.97004 0 5.16666V6.16666C0 6.81099 0.522334 7.33333 1.16667 7.33333H4.66667V7C4.66667 6.63181 4.96514 6.33333 5.33333 6.33333H6.66667C7.03486 6.33333 7.33333 6.6318 7.33333 7V7.33333H10.8333C11.4777 7.33333 12 6.81099 12 6.16666V5.16666C12 3.97004 11.03 2.99999 9.83333 2.99999H8.66667V1.83333C8.66667 1.0049 7.99509 0.333328 7.16667 0.333328H4.83333C4.00491 0.333328 3.33333 1.0049 3.33333 1.83333ZM12 7.99272C11.6632 8.20833 11.2629 8.33333 10.8333 8.33333H7.33333C7.33333 8.70152 7.03486 9 6.66667 9H5.33333C4.96514 9 4.66667 8.70152 4.66667 8.33333H1.16667C0.737119 8.33333 0.336767 8.20833 0 7.99272V10.1667C0 11.3633 0.970049 12.3333 2.16667 12.3333H9.83333C11.03 12.3333 12 11.3633 12 10.1667V7.99272Z" fill="#AFAFAF" />
                                                    <path d="M4.83333 1.33333H7.16667C7.44281 1.33333 7.66667 1.55719 7.66667 1.83333V2.99999H4.33333V1.83333C4.33333 1.55719 4.55719 1.33333 4.83333 1.33333ZM3.33333 1.83333V2.99999H2.16667C0.97005 2.99999 0 3.97004 0 5.16666V6.16666C0 6.81099 0.522334 7.33333 1.16667 7.33333H4.66667V7C4.66667 6.63181 4.96514 6.33333 5.33333 6.33333H6.66667C7.03486 6.33333 7.33333 6.6318 7.33333 7V7.33333H10.8333C11.4777 7.33333 12 6.81099 12 6.16666V5.16666C12 3.97004 11.03 2.99999 9.83333 2.99999H8.66667V1.83333C8.66667 1.0049 7.99509 0.333328 7.16667 0.333328H4.83333C4.00491 0.333328 3.33333 1.0049 3.33333 1.83333ZM12 7.99272C11.6632 8.20833 11.2629 8.33333 10.8333 8.33333H7.33333C7.33333 8.70152 7.03486 9 6.66667 9H5.33333C4.96514 9 4.66667 8.70152 4.66667 8.33333H1.16667C0.737119 8.33333 0.336767 8.20833 0 7.99272V10.1667C0 11.3633 0.970049 12.3333 2.16667 12.3333H9.83333C11.03 12.3333 12 11.3633 12 10.1667V7.99272Z" fill="black" fillOpacity="0.7" style={{ mixBlendMode: 'hue' }} />
                                                    <path d="M4.83333 1.33333H7.16667C7.44281 1.33333 7.66667 1.55719 7.66667 1.83333V2.99999H4.33333V1.83333C4.33333 1.55719 4.55719 1.33333 4.83333 1.33333ZM3.33333 1.83333V2.99999H2.16667C0.97005 2.99999 0 3.97004 0 5.16666V6.16666C0 6.81099 0.522334 7.33333 1.16667 7.33333H4.66667V7C4.66667 6.63181 4.96514 6.33333 5.33333 6.33333H6.66667C7.03486 6.33333 7.33333 6.6318 7.33333 7V7.33333H10.8333C11.4777 7.33333 12 6.81099 12 6.16666V5.16666C12 3.97004 11.03 2.99999 9.83333 2.99999H8.66667V1.83333C8.66667 1.0049 7.99509 0.333328 7.16667 0.333328H4.83333C4.00491 0.333328 3.33333 1.0049 3.33333 1.83333ZM12 7.99272C11.6632 8.20833 11.2629 8.33333 10.8333 8.33333H7.33333C7.33333 8.70152 7.03486 9 6.66667 9H5.33333C4.96514 9 4.66667 8.70152 4.66667 8.33333H1.16667C0.737119 8.33333 0.336767 8.20833 0 7.99272V10.1667C0 11.3633 0.970049 12.3333 2.16667 12.3333H9.83333C11.03 12.3333 12 11.3633 12 10.1667V7.99272Z" fill="white" fillOpacity="0.16" />
                                                </svg>
                                            ),
                                        },
                                        {
                                            title: "Submitted",
                                            width: "w-28",
                                            bg: "bg-[#EEEEEE]",
                                            svg: (
                                                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M14 5.66667V11.8333C14 13.03 13.03 14 11.8333 14H4.16667C2.97005 14 2 13.03 2 11.8333V5.66667H14ZM4.83333 10C4.3731 10 4 10.3731 4 10.8333C4 11.2936 4.3731 11.6667 4.83333 11.6667C5.29357 11.6667 5.66667 11.2936 5.66667 10.8333C5.66667 10.3731 5.29357 10 4.83333 10ZM8 10C7.53976 10 7.16667 10.3731 7.16667 10.8333C7.16667 11.2936 7.53976 11.6667 8 11.6667C8.46024 11.6667 8.83333 11.2936 8.83333 10.8333C8.83333 10.3731 8.46024 10 8 10ZM4.83333 7C4.3731 7 4 7.3731 4 7.83333C4 8.29357 4.3731 8.66667 4.83333 8.66667C5.29357 8.66667 5.66667 8.29357 5.66667 7.83333C5.66667 7.3731 5.29357 7 4.83333 7ZM8 7C7.53976 7 7.16667 7.3731 7.16667 7.83333C7.16667 8.29357 7.53976 8.66667 8 8.66667C8.46024 8.66667 8.83333 8.29357 8.83333 7.83333C8.83333 7.3731 8.46024 7 8 7ZM11.1667 7C10.7064 7 10.3333 7.3731 10.3333 7.83333C10.3333 8.29357 10.7064 8.66667 11.1667 8.66667C11.6269 8.66667 12 8.29357 12 7.83333C12 7.3731 11.6269 7 11.1667 7ZM11.8333 2C13.03 2 14 2.97005 14 4.16667V4.66667H2V4.16667C2 2.97005 2.97005 2 4.16667 2H11.8333Z" fill="#AFAFAF" />
                                                </svg>

                                            ),
                                        },
                                        {
                                            title: "Status",
                                            width: "w-32",
                                            bg: "bg-[#EEEEEE]",
                                            svg: (
                                                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M8.00001 1.33333C11.6819 1.33333 14.6667 4.3181 14.6667 8C14.6667 11.6819 11.6819 14.6667 8.00001 14.6667C4.31811 14.6667 1.33334 11.6819 1.33334 8C1.33334 4.3181 4.31811 1.33333 8.00001 1.33333ZM4.97979 6.64644C4.78453 6.8417 4.78453 7.15829 4.97979 7.35355L7.64646 10.0202C7.84172 10.2155 8.1583 10.2155 8.35356 10.0202L11.0202 7.35355C11.2155 7.15829 11.2155 6.8417 11.0202 6.64644C10.825 6.45118 10.5084 6.45118 10.3131 6.64644L8.00001 8.95955L5.6869 6.64644C5.49163 6.45118 5.17505 6.45118 4.97979 6.64644Z" fill="#AFAFAF" />
                                                </svg>

                                            ),
                                        },
                                        {
                                            title: "Submitter",

                                            width: "w-36",
                                            bg: "bg-[#EEEEEE]",
                                            svg: (
                                                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M11.8361 9.33327C12.6641 9.33327 13.3353 10.0045 13.3353 10.8325V11.4448C13.3353 11.8271 13.2159 12.1998 12.9936 12.5108C11.963 13.9529 10.2802 14.6674 7.99998 14.6674C5.71933 14.6674 4.03736 13.9526 3.00925 12.5097C2.78794 12.1991 2.66901 11.8272 2.66901 11.4458V10.8325C2.66901 10.0045 3.34024 9.33327 4.16826 9.33327H11.8361ZM7.99998 1.33641C9.84093 1.33641 11.3333 2.82879 11.3333 4.66974C11.3333 6.51069 9.84093 8.00308 7.99998 8.00308C6.15903 8.00308 4.66665 6.51069 4.66665 4.66974C4.66665 2.82879 6.15903 1.33641 7.99998 1.33641Z" fill="#AFAFAF" />
                                                </svg>

                                            ),
                                        },
                                        {
                                            title: "URL",
                                            width: "w-36",
                                            bg: "bg-[#EEEEEE]",
                                            svg: (
                                                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M5.93615 11.0006H10.0638C9.65051 13.1815 8.82291 14.666 7.99998 14.666C7.20198 14.666 6.39959 13.2701 5.97485 11.1969L5.93615 11.0006H10.0638H5.93615ZM2.04385 11.0007L4.91427 11.0005C5.15745 12.3887 5.56964 13.5697 6.10906 14.3962C4.40051 13.8916 2.97807 12.7217 2.14141 11.1866L2.04385 11.0007ZM11.0857 11.0005L13.9561 11.0007C13.1352 12.6271 11.6678 13.8714 9.89157 14.3959C10.3946 13.6242 10.7871 12.5442 11.0348 11.2753L11.0857 11.0005L13.9561 11.0007L11.0857 11.0005ZM11.2876 6.66723L14.5343 6.66682C14.6218 7.0977 14.6677 7.54366 14.6677 8.00035C14.6677 8.69723 14.5608 9.36914 14.3625 10.0006H11.2274C11.2976 9.36221 11.3343 8.69149 11.3343 8.00035C11.3343 7.69747 11.3273 7.39851 11.3134 7.10447L11.2876 6.66723L14.5343 6.66682L11.2876 6.66723ZM1.46565 6.66682L4.71233 6.66723C4.6815 7.10053 4.66561 7.54603 4.66561 8.00035C4.66561 8.55326 4.68915 9.0931 4.73451 9.61379L4.77259 10.0006H1.6375C1.43919 9.36914 1.33228 8.69723 1.33228 8.00035C1.33228 7.54366 1.37819 7.0977 1.46565 6.66682ZM5.71697 6.66685H10.283C10.3165 7.09727 10.3343 7.54317 10.3343 8.00035C10.3343 8.55878 10.3077 9.10037 10.2584 9.6175L10.2173 10.0006H5.78261C5.70725 9.37011 5.66561 8.69839 5.66561 8.00035C5.66561 7.65746 5.67566 7.32093 5.69481 6.9925L5.71697 6.66685H10.283H5.71697ZM9.96282 1.71806L9.8909 1.60458C11.9031 2.19856 13.5191 3.7163 14.2479 5.66679L11.1873 5.66699C10.977 4.05571 10.5497 2.67192 9.96282 1.71806L9.8909 1.60458L9.96282 1.71806ZM6.02782 1.62912L6.10901 1.6046C5.52184 2.50428 5.08543 3.82402 4.85366 5.37376L4.81262 5.66699L1.75203 5.66679C2.471 3.74262 4.0534 2.23959 6.02782 1.62912L6.10901 1.6046L6.02782 1.62912ZM7.99998 1.33466C8.87917 1.33466 9.7637 3.02916 10.1426 5.45695L10.1739 5.66682H5.8261C6.1857 3.12737 7.09566 1.33466 7.99998 1.33466Z" fill="#AFAFAF" />
                                                </svg>

                                            ),
                                        },
                                        {
                                            title: "Assigned",
                                            width: "w-32",
                                            bg: "bg-[#E8F0E9]",
                                            svg: (
                                                <svg width="14" height="15" viewBox="0 0 14 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M4.00002 5.00017V1.16667C4.00002 0.890529 4.22388 0.666672 4.50002 0.666672C4.77616 0.666672 5.00002 0.890529 5.00002 1.16667V5.00017C5.00002 5.18426 5.14926 5.3335 5.33335 5.3335C5.51745 5.3335 5.66669 5.18426 5.66669 5.00017V1.66667C5.66669 1.39053 5.89054 1.16667 6.16669 1.16667C6.44283 1.16667 6.66669 1.39053 6.66669 1.66667V5.50001C6.66669 5.51415 6.6661 5.52815 6.66495 5.542C6.95311 5.43312 7.31394 5.3308 7.66669 5.3308C7.99991 5.3308 8.28491 5.41403 8.49617 5.52043C8.60046 5.57296 8.69747 5.63652 8.77672 5.7086C8.81567 5.74403 8.86063 5.79083 8.89973 5.84899C8.93045 5.8947 9.00002 6.00874 9.00002 6.16667C9.00002 6.33907 8.91121 6.4993 8.76502 6.59067L7.49412 7.38498L6.3889 8.64564L5.47071 9.91038C5.1258 10.3855 4.57422 10.6666 3.98713 10.6666H3.22811C2.60746 10.6666 2.01235 10.3514 1.69151 9.79257C1.49008 9.44174 1.24072 8.98076 1.04023 8.52452C0.849508 8.09048 0.666687 7.58261 0.666687 7.16664V2.50001C0.666687 2.22386 0.890545 2.00001 1.16669 2.00001C1.44283 2.00001 1.66669 2.22386 1.66669 2.50001V5.33196C1.66669 5.51605 1.81593 5.66529 2.00002 5.66529C2.18412 5.66529 2.33335 5.51605 2.33335 5.33196V1.66667C2.33335 1.39053 2.55721 1.16667 2.83335 1.16667C3.1095 1.16667 3.33335 1.39053 3.33335 1.66667V5.00017C3.33335 5.18426 3.48259 5.3335 3.66669 5.3335C3.85078 5.3335 4.00002 5.18426 4.00002 5.00017ZM8.99996 14.6667C6.86575 14.6667 5.06615 13.234 4.51044 11.278C5.10765 11.1501 5.6442 10.8061 6.01014 10.3021L6.91033 9.06211L7.93064 7.8983L9.11829 7.15602C9.45941 6.94282 9.66663 6.56894 9.66663 6.16669C9.66663 5.81248 9.51141 5.56406 9.45295 5.47709C9.42029 5.42851 9.38637 5.38501 9.35319 5.34652C11.7655 5.52706 13.6666 7.54152 13.6666 10C13.6666 12.5773 11.5773 14.6667 8.99996 14.6667ZM11 9.33335C11 8.96516 10.7015 8.66669 10.3333 8.66669C9.96511 8.66669 9.66663 8.96516 9.66663 9.33335C9.66663 9.70154 9.96511 10 10.3333 10C10.7015 10 11 9.70154 11 9.33335ZM7.0915 11.1415C6.89248 11.3329 6.88633 11.6494 7.07776 11.8484C7.56232 12.3522 8.24478 12.6667 8.99983 12.6667C9.75489 12.6667 10.4374 12.3522 10.9219 11.8484C11.1133 11.6494 11.1072 11.3329 10.9082 11.1415C10.7092 10.95 10.3926 10.9562 10.2012 11.1552C9.89736 11.4711 9.47186 11.6667 8.99983 11.6667C8.52781 11.6667 8.10231 11.4711 7.79847 11.1552C7.60704 10.9562 7.29051 10.95 7.0915 11.1415ZM8.3333 9.33335C8.3333 8.96516 8.03482 8.66669 7.66663 8.66669C7.29844 8.66669 6.99996 8.96516 6.99996 9.33335C6.99996 9.70154 7.29844 10 7.66663 10C8.03482 10 8.3333 9.70154 8.3333 9.33335Z" fill="#83A588" />
                                                </svg>

                                            ),
                                        },
                                        {
                                            title: "Priority",
                                            width: "w-[125px]",
                                            bg: "bg-[#EAE3FC]",

                                        },
                                        {
                                            title: "Due Date",
                                            width: "w-[125px]",
                                            bg: "bg-[#EAE3FC]",

                                        },
                                        {
                                            title: "Est. Value",
                                            width: "w-32",
                                            bg: "bg-[#FFE9E0]",

                                        },
                                        { title: "Actions", width: "w-24", svg: null },
                                    ].map((col, idx) => (
                                        <th
                                            key={idx}
                                            className={`text-left px-3 text-xs font-medium text-[#475569] border-r border-[#e2e2e2] ${col.bg} ${col.width}`}
                                        >
                                            <div className="flex gap-x-2 items-center">
                                                {col.svg}
                                                {col.title}
                                            </div>
                                        </th>
                                    ))}


                                </tr>
                            </thead>
                            <tbody>
                                {tasks.map((task, index) => (
                                    <tr key={task.id} className="border-b border-[#e2e8f0] hover:bg-[#f8fafc] h-[32px]">
                                        <td className="px-3 text-xs text-[#666c66] border-r border-[#e2e2e2] text-center truncate">
                                            {task.id}
                                        </td>
                                        <td className="px-3 border-r border-[#e2e2e2] truncate">
                                            <EditableCell
                                                value={task.jobRequest}
                                                onSave={(value) => handleCellEdit(index, "jobRequest", value)}
                                                className="text-xs text-[#121212] truncate"
                                            />
                                        </td>
                                        <td className="px-3 border-r border-[#e2e2e2] truncate">
                                            <EditableCell
                                                value={task.submitted}
                                                onSave={(value) => handleCellEdit(index, "submitted", value)}
                                                className="text-xs text-[#666c66] truncate"
                                                type="date"
                                            />
                                        </td>
                                        <td className="px-3 border-r border-[#e2e2e2] truncate">
                                            <Badge className={`${getStatusColor(task.status)} text-[12px] w-[80px] h-[24px]  cursor-pointer truncate`}>
                                                {task.status}
                                            </Badge>
                                        </td>
                                        <td className="px-3 border-r border-[#e2e2e2] truncate">
                                            <EditableCell
                                                value={task.submitter}
                                                onSave={(value) => handleCellEdit(index, "submitter", value)}
                                                className="text-xs text-[#121212] truncate"
                                            />
                                        </td>
                                        <td className="px-3 border-r border-[#e2e2e2] text-[#1a8cff] underline truncate">
                                            <EditableCell
                                                value={task.url}
                                                onSave={(value) => handleCellEdit(index, "url", value)}
                                                className="text-xs text-[#1a8cff] underline truncate"
                                            />
                                        </td>
                                        <td className="px-3 border-r border-[#e2e2e2] truncate">
                                            <EditableCell
                                                value={task.assigned}
                                                onSave={(value) => handleCellEdit(index, "assigned", value)}
                                                className="text-xs text-[#121212] truncate"
                                            />
                                        </td>
                                        <td className="px-3 border-r border-[#e2e2e2] text-xs font-semibold truncate">
                                            <span className={getPriorityColor(task.priority)}>{task.priority}</span>
                                        </td>
                                        <td className="px-3 border-r border-[#e2e2e2] truncate">
                                            <EditableCell
                                                value={task.dueDate}
                                                onSave={(value) => handleCellEdit(index, "dueDate", value)}
                                                className="text-xs text-[#666c66] truncate"
                                                type="date"
                                            />
                                        </td>
                                        <td className="px-3 border-r border-[#e2e2e2]">
                                            <div className="flex items-center text-xs pl-9 text-[#121212] font-medium truncate">
                                                <EditableCell
                                                    value={task.estValue}
                                                    onSave={(value) => handleCellEdit(index, "estValue", value)}
                                                    className="text-xs text-[#121212]  font-medium truncate"
                                                />
                                                <span className="ml-1"><svg width="7" height="8" viewBox="0 0 7 8" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M4.59653 8L0.768531 5.012V4.04H2.86853C3.29253 4.04 3.63253 3.948 3.88853 3.764C4.15253 3.58 4.32053 3.312 4.39253 2.96H0.768531V2.06H4.39253C4.32053 1.708 4.15253 1.444 3.88853 1.268C3.63253 1.084 3.29253 0.991999 2.86853 0.991999L0.768531 0.98V0.0799997H6.62453V1.004L4.71653 0.991999C4.90053 1.064 5.05253 1.196 5.17253 1.388C5.30053 1.58 5.38853 1.804 5.43653 2.06H6.62453V2.96H5.44853C5.40053 3.328 5.26853 3.656 5.05253 3.944C4.84453 4.232 4.57253 4.46 4.23653 4.628C3.90053 4.796 3.50853 4.884 3.06053 4.892H2.26853L6.37253 8H4.59653Z" fill="#AFAFAF" />
                                                </svg>
                                                </span>
                                            </div>
                                        </td>

                                        <td className="px-3 truncate">
                                            <Button
                                                variant="ghost"
                                                size="sm"
                                                className="h-6 w-6 p-0"
                                                onClick={() => handleButtonClick(`Action for row ${task.id}`)}
                                            >
                                                <MoreHorizontal className="w-4 h-4" />
                                            </Button>
                                        </td>
                                    </tr>
                                ))}

                                {/* Empty Interactive Rows */}
                                {Array.from({ length: 20 }, (_, i) => (
                                    <tr key={`empty-${i}`} className="border-b border-[#e2e8f0] hover:bg-[#f8fafc] h-[32px]">
                                        <td className="px-3 text-xs text-[#666c66] border-r border-[#e2e2e2] text-center">{6 + i}</td>
                                        <td className="px-3 border-r border-[#e2e2e2] truncate">
                                            <EditableCell
                                                value=""
                                                onSave={(value) => console.log(`Row ${6 + i} job request:`, value)}
                                                className="text-xs text-[#121212] truncate"
                                            />
                                        </td>
                                        <td className="px-3 border-r border-[#e2e2e2] truncate">
                                            <EditableCell
                                                value=""
                                                onSave={(value) => console.log(`Row ${6 + i} submitted:`, value)}
                                                className="text-xs text-[#666c66] truncate"
                                                type="date"
                                            />
                                        </td>
                                        <td className="px-3 border-r border-[#e2e2e2]"></td>
                                        <td className="px-3 border-r border-[#e2e2e2] truncate">
                                            <EditableCell
                                                value=""
                                                onSave={(value) => console.log(`Row ${6 + i} submitter:`, value)}
                                                className="text-xs text-[#121212] truncate"
                                            />
                                        </td>
                                        <td className="px-3 border-r border-[#e2e2e2] truncate">
                                            <EditableCell
                                                value=""
                                                onSave={(value) => console.log(`Row ${6 + i} url:`, value)}
                                                className="text-xs text-[#1a8cff] underline truncate"
                                            />
                                        </td>
                                        <td className="px-3 border-r border-[#e2e2e2] truncate">
                                            <EditableCell
                                                value=""
                                                onSave={(value) => console.log(`Row ${6 + i} assigned:`, value)}
                                                className="text-xs text-[#121212] truncate"
                                            />
                                        </td>
                                        <td className="px-3 border-r border-[#e2e2e2]"></td>
                                        <td className="px-3 border-r border-[#e2e2e2] truncate">
                                            <EditableCell
                                                value=""
                                                onSave={(value) => console.log(`Row ${6 + i} due date:`, value)}
                                                className="text-xs text-[#666c66] truncate"
                                                type="date"
                                            />
                                        </td>
                                        <td className="px-3 border-r border-[#e2e2e2] truncate">
                                            <EditableCell
                                                value=""
                                                onSave={(value) => console.log(`Row ${6 + i} est value:`, value)}
                                                className="text-xs text-[#121212] font-medium truncate"
                                            />
                                        </td>
                                        <td className="px-3">
                                            <Button
                                                variant="ghost"
                                                size="sm"
                                                className="h-6 w-6 p-0"
                                                onClick={() => handleButtonClick(`Action for row ${6 + i}`)}
                                            >
                                                <MoreHorizontal className="w-4 h-4" />
                                            </Button>
                                        </td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                    </div>
                </div>




                {/* Bottom Tabs */}
                <div className="w-[1440px] h-[48px] px-8 flex items-center border-b border-[#e2e2e2] bg-white">
                    <div className="flex items-center space-x-0 ml-4">
                        {tabs.map((tab) => (
                            <button
                                key={tab}
                                onClick={() => {
                                    setActiveTab(tab)
                                    handleButtonClick(`${tab} tab`)
                                }}
                                className={`px-4 h-[48px] flex items-center text-[16px] font-medium border-t-2 transition-colors ${activeTab === tab
                                        ? "border-[#618666] text-[#1d3b2c] bg-[#f0f5f3] font-semibold"
                                        : "border-transparent text-[#757575] hover:text-[#121212] hover:bg-[#f8fafc]"
                                    }`}
                            >
                                {tab}
                            </button>
                        ))}
                        <Button
                            variant="ghost"
                            size="sm"
                            className="ml-2 h-[32px] w-[32px] p-0 text-[#757575] hover:bg-[#f8fafc]"
                            onClick={() => handleButtonClick("Add Bottom Tab")}
                        >
                            <Plus className="w-4 h-4" />
                        </Button>
                    </div>
                </div>

            </div>
        </div>
    )
}
